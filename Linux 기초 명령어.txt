2024-10-10
Linux 기초 명령어 Ⅰ

목차
① Linux 와 Git Bash 기본 개념
★② Linux 기초 명령어 - 파일 및 디렉토리
③ Linux 텍스트 편집기 - vim
④ Linux 텍스트 편집기 - nano

학습 목표
① 운영체제의 기본 개념과 필요성을 이해하고 대표적인 오픈소스 운영체제인 Linux의 특징을 설명할 수 있다.
② Git Bash를 활용하기 위한 기초적인 리눅스 명령어들의 활용 방법을 이해하고 숙지할 수 있다.
③ 리눅스 환경에서 디렉토리 이동 방법과 파일의 이동, 복사, 삭제 기능을 이해하고 숙지할 수 있다.
④ 리눅스에서 널리 활용되는 텍스트 편집기인 vim과 nano의 사용법을 익히고 이를 활용하여 실제 텍스트 문서를 생성 및 편집할 수 있다.

ⅰ.Linux 와 Git Bash 기본 개념
· 운영체제란?
-사용자와 컴퓨터 사이에 위치하는 시스템 소프트웨어
-컴퓨터의 하드웨어 자원과 소프트웨어 자원 등을 제어하고 관리하며, 프로그램 실행 시 필요로 하는 공통 서비스를 지원하는 시스템 소프트웨어

· ★운영체제의 주요 기능★
-프로세스 관리
-파일 시스템 관리
-★병행 제어★ : 정해진 자원(resource)를 효율적으로 제어하여 교착상태(deadlock) 예방함 [식사하는 철학자 문제]
-메모리 관리
-입출력 장치 관리: 플러그 앤 플레이(plug&play)기능을 제공하여 장치의 드라이버를 운영체제가 바로 잡아서 유저가 따로 설치할 필요가 없어짐
└> 가장 중요한 5가지
-스토리지 관리
-네트워크 관리
-보안 관리
└> 비교적 덜 중요함

· 대표적 운영체제 (기반이 되는 운영체제의 커널에 따라 달라짐)

-UNIX 계열: iOS, MacOS, Solaris 등이 존재함
└>Linux 계열: UNIX 계열에 포함되며 Ubuntu, Fedora, Android 등이 있음/리눅스 커널을 사용하는 모든 운영체제를 리눅스라고 칭한다(즉, 리눅스는 1개가 아니다)

-Windows 계열: 9x, NT 커널 계열이 존재하였으나 현재는 NT 커널 계열만 존재

Linux란?
-리눅스 커널(Linux kernel)에 기반을 둔 운영체제를 총칭
-커널(kernel)이란 운영체제를 규정하는 핵심 요소
└> ex)Linux kernel, Unix kernel, Windows kernel, 등
-리눅스 커널은 오픈소스 소프트웨어이므로, 리눅스 커널에 기반한 다양한 오픈소스 운영체제와 배포판이 출현하게 됨
└> ex)Ubuntu, Fedora, Dedian, Android, 등
-컴퓨터 분야 역사상 가장 많은 개발자들이 참여하는 │★세계 최대 규모의 오픈소스 프로젝트이자 소프트웨어★│

page10 Linux kernel의 기본 구조 암기해야됨
[응용프로그램(Application): User mode에서 구동되는 프로그램
커널 부
- 시스템 콜 인터페이스(System Call Interface): 응용프로그램과 커널 사이에 위치하여 운영 체제의 커널이 제공하는 서비스에 대한 응용 프로그램의 요청에 따라 커널에 접근하기 위한 인터페이스
-커널(Kernel) 핵심 부: 프로세스 관리, 메모리 관리, 파일 시스템, 네트워킹, 디바이스 제어, 네트워크 제어 등을 수행
하드웨어(Hardware): CPU, RAM, HDD, 네트워크 장치 등

CLI(Command Line Interface)
└>텍스트 명령만으로 시스템을 사용하고 제어하는 인터페이스를 의미함

Shell
└>명령행(command line) 모드에서 사용자가 입력한 텍스트 명령을 해석하고 실행하는 명령 해석기 프로그램

Bash(Bourne Again SHell)
└>GNU 표준 shell 프로그램으로 리눅스의 표준 shell 프로그램으로 널리 사용되고 있음

Git Bash
-윈도우 상에서도 Git 명령을 수행할 수 있도록 Git에서 제공하는 리눅스 기반의 shell 프로그램
-Git Bash는 윈도우 환경에서 git의 모든 명령을 사용하는데 필수적으로 요구되는 리눅스 기본 명령어를 함께 제공한다.
└> 단, 리눅스의 모든 명령어와 기능을 지원하는 것은 아님에 유의해야 한다.

